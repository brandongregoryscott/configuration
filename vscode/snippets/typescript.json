{
	// Place your snippets for typescript here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	//
	// Snippets can be easily generated or modified using https://snippet-generator.app/
	"Typescript Region": {
		"prefix": "ts-region",
		"body": [
			"// -----------------------------------------------------------------------------------------",
			"// #region $1",
			"// -----------------------------------------------------------------------------------------",
			"",
			"// #endregion $1"
		],
		"description": "Typescript region"
	},
	"React API Service": {
		"prefix": "apisrv",
		"body": [
			"import { ServiceFactory } from \"andculturecode-javascript-react\";",
			"",
			"// ---------------------------------------------------------------------------------------------",
			"// #region Interfaces",
			"// ---------------------------------------------------------------------------------------------",
			"",
			"/**",
			" * Path parameters for replacement in endpoint route when acting on a list of ${1:Resource} resources.",
			" *",
			" * If the route is flat and no parameters need to be replaced, this interface can be empty.",
			" *",
			" * @export",
			" * @interface ${1:Resource}BasePathParams",
			" */",
			"export interface ${1:Resource}BasePathParams {}",
			"",
			"/**",
			" * Path parameters for replacement in endpoint route when retrieving a specific ${1:Resource} resource.",
			" *",
			" * @export",
			" * @interface ${1:Resource}ResourcePathParams",
			" * @extends {${1:Resource}BasePathParams}",
			" */",
			"export interface ${1:Resource}ResourcePathParams extends ${1:Resource}BasePathParams {",
			"    id: number;",
			"}",
			"",
			"/**",
			" * Search parameters when listing ${1:Resource} resources.",
			" * These get translated to QueryString parameters.",
			" *",
			" * If the endpoint requires no additional parameters, this interface can be empty.",
			" *",
			" * @export",
			" * @interface ${1:Resource}ListQueryParams",
			" */",
			"export interface ${1:Resource}ListQueryParams {}",
			"",
			"// #endregion Interfaces",
			"",
			"// ---------------------------------------------------------------------------------------------",
			"// #region Constants",
			"// ---------------------------------------------------------------------------------------------",
			"",
			"const baseEndpoint = \"api/v1/${1/(.*)/${1:/downcase}/}s\";",
			"const resourceType = ${1:Resource}Record;",
			"const resourceEndpoint = `\\${baseEndpoint}/:id`;",
			"",
			"// #endregion Constants",
			"",
			"// ---------------------------------------------------------------------------------------------",
			"// #region Service",
			"// ---------------------------------------------------------------------------------------------",
			"",
			"/**",
			" * API service for acting on ${1:Resource} resources. Use the CRUD service hooks (useList, useGet, etc.)",
			" * when making calls from a React component.",
			" */",
			"const ${1:Resource}Service = {",
			"    create: ServiceFactory.create(resourceType, baseEndpoint),",
			"    delete: ServiceFactory.delete(resourceEndpoint),",
			"    get: ServiceFactory.get(resourceType, resourceEndpoint),",
			"    list: ServiceFactory.list(resourceType, baseEndpoint),",
			"    update: ServiceFactory.update(resourceType, resourceEndpoint),",
			"};",
			"",
			"// #endregion Service",
			"",
			"// ---------------------------------------------------------------------------------------------",
			"// #region Exports",
			"// ---------------------------------------------------------------------------------------------",
			"",
			"export { ${1:Resource}Service };",
			"",
			"// #region Exports",
			""
		],
		"description": "React API Service"
	}
}