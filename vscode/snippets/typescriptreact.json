{
	// Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Private method": {
		"prefix": "prvm",
		"body": [
			"private _$1(): void {",
			"\t$2",
			"}"
		],
		"description": "Private method"
	},
	"Private async method": {
		"prefix": "pravm",
		"body": [
			"private async _$1(): void {",
			"\t$2",
			"}"
		],
		"description": "Private async method"
	},
	"wrapper.debug();": {
		"prefix": "jdb",
		"body": [
			"console.log(wrapper.debug());",
		],
		"description": "Stubs out a console log to print the debug tree of current wrapper"
	},
	"New React Component": {
		"prefix": "ncomponent",
		"body": [
			"import { CoreUtils } from \"@core/utilities/core-utils\";",
			"import * as React    from \"react\";",
			"",
			"// -------------------------------------------------------------------------------------------------",
			"// #region Interfaces",
			"// -------------------------------------------------------------------------------------------------",
			"",
			"interface $1Props {",
			"",
			"}",
			"",
			"interface $1State {",
			"",
			"}",
			"",
			"",
			"// #endregion Interfaces",
			"",
			"class $1 extends React.PureComponent<$1Props, $1State> {",
			"",
			"    // -------------------------------------------------------------------------------------------------",
			"    // #region Constructor",
			"    // -------------------------------------------------------------------------------------------------",
			"",
			"    constructor(props: $1Props) {",
			"        super(props);",
			"",
			"        this.state = {",
			"",
			"        };",
			"",
			"        CoreUtils.bindAll(this);",
			"    }",
			"",
			"    // #endregion Constructor",
			"",
			"    // -------------------------------------------------------------------------------------------------",
			"    // #region Public Methods",
			"    // -------------------------------------------------------------------------------------------------",
			"",
			"    public componentDidMount(): void {",
			"        // TODO: Fill out this block if necessary",
			"    }",
			"",
			"    public render(): JSX.Element {",
			"        return (",
			"            null",
			"        );",
			"    }",
			"",
			"    // #endregion Public Methods",
			"",
			"    // -------------------------------------------------------------------------------------------------",
			"    // #region Private Methods",
			"    // -------------------------------------------------------------------------------------------------",
			"",
			"    // #endregion Private Methods",
			"};",
			"",
			"export {",
			"    $1,",
			"    $1Props,",
			"    $1State,",
			"};",
			""
		],
		"description": "New React Component"
	},
	"react-router history mock": {
		"prefix": "historymock",
		"body": [
		  "let context;",
		  "beforeEach(() => {",
		  "    // Mocking react-router context to prevent 'history' being null for Link component",
		  "    // https://stackoverflow.com/a/52533139",
		  "    context = {",
		  "        childContextTypes: {",
		  "            router: () => void 0,",
		  "        },",
		  "        context: {",
		  "            router: {",
		  "                history: createMemoryHistory(),",
		  "            },",
		  "        },",
		  "    };",
		  "});"
		],
		"description": "react-router history mock"
	  }
}